
#user  nobody;
worker_processes  1;

error_log  ../openresty/logs/error.log  info;

pid        ../openresty/logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	client_max_body_size    1000m;
	client_body_buffer_size 1000M;
    include       ../openresty/conf/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  ../openresty/logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    underscores_in_headers on;
	
	# 开启和关闭gzip模式
    gzip on;

    # gizp压缩起点，文件大于1k才进行压缩
    gzip_min_length 1k;

    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
    gzip_comp_level 6;

    # 进行压缩的文件类型。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json image/png image/gif image/jpeg;

    # nginx 对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回
    #gzip_static on | off;

    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary off;

    # 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区 
    gzip_buffers 4 16k;

    # 配置禁用gzip条件，支持正则
    gzip_disable "MSIE [1-6]\.";

    # 设置gzip压缩针对的HTTP协议版本
    gzip_http_version 1.1;
	

    include ../vhost/*.conf;
}
