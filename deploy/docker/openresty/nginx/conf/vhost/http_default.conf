# localhost
# location 符号优先级顺序为： = > ^~ > ~* > ~ > /
#先进行普通匹配中的精准匹配 =, 如果命中了立马返回.
#然后进行普通匹配中的精准开头匹配 ^~, 如果命中则立马返回.
#进行普通匹配中的 无匹配符号 匹配, 如果命中继续匹配, 直到普通匹配全部完成, 并保存路径最长的匹配.
#由上自下进行正则匹配 ~(区分大小写)|~*(不区分大小写), 如果命中立即返回.
#如果正则匹配全部失败, 则返回普通匹配中存放的匹配.
server {
		client_max_body_size    1000m;
		client_body_buffer_size 1000M;

        listen       80;
        server_name  localhost;

        #charset koi8-r;

        access_log  logs/docker.openresty.log;

		# 禁止GIT或SVN目录输出
		location ~ /\.(git|svn)$ {
			deny all;
		}

		# 禁止任务脚本输出
		location ~* \.(sql|sh|md)$ {
			deny all;
		}

		# 禁止证书文件输出
		location ~* \.(p12|pem|key|crt|sql|md|gitignore|htaccess)$ {
			deny all;
		}


        location ^~ /clash/ {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Cache-Control no-store;
                proxy_connect_timeout  600;
                proxy_send_timeout      600;
                proxy_read_timeout      600;
                proxy_buffer_size 2m;
                proxy_buffers 4 2m;
                proxy_busy_buffers_size 2m;
                proxy_temp_file_write_size 2m;
                proxy_max_temp_file_size 128m;
                client_max_body_size 150m;
                client_body_buffer_size 2m;
                proxy_pass http://172.30.24.223:9090/ui/;
                #通过直接替换的方式把输出内容中的URL替换掉
                sub_filter '"/' '"/clash/'; #把 "/ 替换成 "/clash/
                sub_filter_once off; #是否只替换一次
        }

        # 动态请求路径映射
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control no-store;
            set $proxyUrl '';
            #请求转发
            set_by_lua_file $proxyUrl "/usr/local/openresty/lualib/custome/proxyRequest.lua";
            proxy_connect_timeout  600;
            proxy_send_timeout      600;
            proxy_read_timeout      600;
            proxy_buffer_size 2m;
            proxy_buffers 4 2m;
            proxy_busy_buffers_size 2m;
            proxy_temp_file_write_size 2m;
            proxy_max_temp_file_size 128m;
            client_max_body_size 150m;
            client_body_buffer_size 2m;
            proxy_pass http://$proxyUrl;
        }


        location ~ \.(html)$ {
           root html;
           add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        location ~* \.(gif|jpg|png|js|css|eot|swf|svg|ttf|woff|woff2|json|txt|ico|wgt|vue)$ {
            root html;
        }

        location = /favicon.ico {
            root   html;
        }

        location = / {
           index index.html;
           root html;
        }

        location = /50x.html {
            root   html;
        }

}
