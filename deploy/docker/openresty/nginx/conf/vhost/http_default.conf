# localhost
# location 符号优先级顺序为： = > ^~ > ~* > ~ > /
#先进行普通匹配中的精准匹配 =, 如果命中了立马返回.
#然后进行普通匹配中的精准开头匹配 ^~, 如果命中则立马返回.
#进行普通匹配中的 无匹配符号 匹配, 如果命中继续匹配, 直到普通匹配全部完成, 并保存路径最长的匹配.
#由上自下进行正则匹配 ~(区分大小写)|~*(不区分大小写), 如果命中立即返回.
#如果正则匹配全部失败, 则返回普通匹配中存放的匹配.
server {
		client_max_body_size    1000m;
		client_body_buffer_size 1000M;

        listen       80;
        server_name  localhost;

        #charset koi8-r;

        access_log  logs/docker.openresty.log;

        location ^~ /FileView/ {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Cache-Control no-store;
                proxy_connect_timeout  600;
                proxy_send_timeout      600;
                proxy_read_timeout      600;
                proxy_buffer_size 2m;
                proxy_buffers 4 2m;
                proxy_busy_buffers_size 2m;
                proxy_temp_file_write_size 2m;
                proxy_max_temp_file_size 128m;
                client_max_body_size 150m;
                client_body_buffer_size 2m;
                proxy_pass http://127.0.0.1:8012/;
        }


		# 禁止GIT或SVN目录输出
		location ~ /\.(git|svn)$ {
			deny all;
		}


        location ~ /file_service_dev/download {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #add_header Cache-Control no-store;
            add_header Cache-Control max-age=86400;
            proxy_connect_timeout  600;
            proxy_send_timeout      600;
            proxy_read_timeout      600;
            proxy_buffer_size 2m;
            proxy_buffers 4 2m;
            proxy_busy_buffers_size 2m;
            proxy_temp_file_write_size 2m;
            proxy_max_temp_file_size 128m;
            client_max_body_size 150m;
            client_body_buffer_size 2m;
            proxy_buffering off;
            proxy_pass http://file_down_load_dev;
        }

        location ~ /file_service_dev/upload {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control no-store;
            proxy_connect_timeout  600;
            proxy_send_timeout      600;
            proxy_read_timeout      600;
            proxy_buffer_size 2m;
            proxy_buffers 4 2m;
            proxy_busy_buffers_size 2m;
            proxy_temp_file_write_size 2m;
            proxy_max_temp_file_size 128m;
            client_max_body_size 150m;
            client_body_buffer_size 2m;
            proxy_pass http://file_up_load_dev;
        }

        #测试，文件检查，用于断点下载
        location ~ /file_service_test/download {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #add_header Cache-Control no-store;
            add_header Cache-Control max-age=86400;
            proxy_connect_timeout  600;
            proxy_send_timeout      600;
            proxy_read_timeout      600;
            proxy_buffer_size 2m;
            proxy_buffers 4 2m;
            proxy_busy_buffers_size 2m;
            proxy_temp_file_write_size 2m;
            proxy_max_temp_file_size 128m;
            client_max_body_size 150m;
            client_body_buffer_size 2m;
            proxy_buffering off;
            proxy_pass http://file_down_load_test;
        }

        #测试，文件检查，用于断点上传
        location ~ /file_service_test/upload {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control no-store;
            proxy_connect_timeout  600;
            proxy_send_timeout      600;
            proxy_read_timeout      600;
            proxy_buffer_size 2m;
            proxy_buffers 4 2m;
            proxy_busy_buffers_size 2m;
            proxy_temp_file_write_size 2m;
            proxy_max_temp_file_size 128m;
            client_max_body_size 150m;
            client_body_buffer_size 2m;
            proxy_pass http://file_up_load_test;
        }

		# 禁止任务脚本输出
		location ~* \.(sql|sh|md)$ {
			deny all;
		}

		# 禁止证书文件输出
		location ~* \.(p12|pem|key|crt|sql|md|gitignore|htaccess)$ {
			deny all;
		}

        # 动态请求路径映射
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control no-store;
            set $proxyUrl '';
            #请求转发
            set_by_lua_file $proxyUrl "/usr/local/openresty/lualib/custome/proxyRequest.lua";
            proxy_connect_timeout  600;
            proxy_send_timeout      600;
            proxy_read_timeout      600;
            proxy_buffer_size 2m;
            proxy_buffers 4 2m;
            proxy_busy_buffers_size 2m;
            proxy_temp_file_write_size 2m;
            proxy_max_temp_file_size 128m;
            client_max_body_size 150m;
            client_body_buffer_size 2m;
            proxy_pass http://$proxyUrl;
        }

        location = /favicon.ico {
            root   html;
        }

        location ~ \.(html)$ {
           root html;
        }

        location ~* \.(gif|jpg|png|js|css|eot|swf|svg|ttf|woff|woff2|json|txt|ico|wgt)$ {
            root html;
        }
		
        location = / {
           index index.html;
           root html;
        }

        location = /50x.html {
            root   html;
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
}
