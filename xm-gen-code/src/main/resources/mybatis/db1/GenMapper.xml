<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunmo.biz.gen.GenMapper">

    <!-- mysql 表管理 -->
    <select id="queryAllTables" resultType="com.xunmo.biz.table.TableInfo" parameterType="java.util.Map">
        SELECT table_name    AS tableName,
               ENGINE        AS engine,
               table_comment AS tableComment,
               create_time   AS createTime
        FROM information_schema.TABLES
        WHERE table_schema = ((SELECT DATABASE()))
        <if test="tableName != null and '' != tableName">
            and table_name like concat(#{tableName}, '%')
        </if>
        <if test="tableComment != null and '' != tableComment">
            and table_comment like concat(#{tableComment}, '%')
        </if>
        <if test="beginCreateTime != null and '' != beginCreateTime">
            and create_time &gt; #{beginCreateTime}
        </if>
        <if test="endCreateTime != null and '' != endCreateTime">
            and create_time &lt; #{endCreateTime}
        </if>
        order by table_name desc, create_time desc
        <if test="pageNo != null and pageSize != null">
            limit #{pageNo}, #{pageSize}
        </if>
    </select>

    <select id="countAllTables" resultType="java.lang.Long">
        SELECT count(*)
        FROM information_schema.TABLES
        WHERE table_schema = ((SELECT DATABASE()))
        order by table_name desc, create_time desc
    </select>

    <select id="queryTable" resultType="com.xunmo.biz.table.TableInfo">
        SELECT table_name    AS tableName,
               ENGINE        AS engine,
               table_comment AS tableComment,
               create_time   AS createTime
        FROM information_schema.TABLES
        WHERE table_schema = ((SELECT DATABASE()))
          and table_name = #{tableName} limit 1
    </select>

    <!--  查询所有字段 -->
    <select id="getAllFieldByTableName" resultType="map">
        SELECT
            table_name as tableName,
            column_name as columnName,
            ordinal_position as ordinalPosition,
            column_default as columnDefault,
            is_nullable as isNullable,
            data_type as dataType,
            character_maximum_length as length,
            numeric_precision as numericPrecision,
            numeric_scale as numericScale,
            column_type as columnType,
            column_key as columnKey,
            extra as extra,
            column_comment as columnComment
        FROM
            information_schema.COLUMNS
        WHERE
            table_name = #{tableName} and table_schema = ((SELECT DATABASE())) order by ordinal_position
    </select>

    <!-- 生成数据集 -->
    <insert id="addGenData" parameterType="com.xunmo.biz.data.GenData" useGeneratedKeys="true" keyProperty="id">
        insert into t_data (`name`, authorName, serviceName, packageName,
                             moduleName, subPackageName, entitySuperClassName, mapperSuperClassName, serviceSuperClassName,
                             serviceImplSuperClassName, dsFlag, tenderFlag, lombokFlag,
                             chainFlag, constFlag, genFlag, prefixPath, suffixPath, remark,
                             appPackageName,appModuleName,appPopupType,appTemplateType,appAddBtnFlag,appUpdateBtnFlag,appDelBtnFlag,appCopyBtnFlag,appShowBtnFlag,
                             appAddBtnCode,appUpdateBtnCode,appDelBtnCode,appCopyBtnCode,appShowBtnCode,
                             parentSystemId,parentMenuId,menuIcon,parentIdName,slaveTalbeName,slaveFieldName
        ) values
            (#{name}, #{authorName}, #{serviceName},#{packageName},
             #{moduleName}, #{subPackageName}, #{entitySuperClassName}, #{mapperSuperClassName},#{serviceSuperClassName},
             #{serviceImplSuperClassName}, #{dsFlag}, #{tenderFlag}, #{lombokFlag},
             #{chainFlag},#{constFlag}, #{genFlag}, #{prefixPath}, #{suffixPath}, #{remark},
             #{appPackageName},#{appModuleName},#{appPopupType},#{appTemplateType},#{appAddBtnFlag},
             #{appUpdateBtnFlag},#{appDelBtnFlag},#{appCopyBtnFlag},#{appShowBtnFlag},#{appAddBtnCode},
             #{appUpdateBtnCode},#{appDelBtnCode},#{appCopyBtnCode},#{appShowBtnCode},#{parentSystemId},
             #{parentMenuId},#{menuIcon}, #{parentIdName},#{slaveTalbeName},#{slaveFieldName}
            )
    </insert>
    <delete id="delGenData">
        delete
        from t_data
        where id = #{id}
    </delete>
    <update id="updateGenData" parameterType="com.xunmo.biz.data.GenData" >
        update t_data
        set `name` = #{name},
            authorName = #{authorName},
            serviceName = #{serviceName},
            packageName = #{packageName},
            moduleName = #{moduleName},
            subPackageName = #{subPackageName},
            entitySuperClassName = #{entitySuperClassName},
            mapperSuperClassName = #{mapperSuperClassName},
            serviceSuperClassName = #{serviceSuperClassName},
            serviceImplSuperClassName = #{serviceImplSuperClassName},
            dsFlag = #{dsFlag},
            tenderFlag = #{tenderFlag},
            lombokFlag = #{lombokFlag},
            chainFlag = #{chainFlag},
            constFlag = #{constFlag},
            genFlag = #{genFlag},
            prefixPath = #{prefixPath},
            suffixPath = #{suffixPath},
            remark = #{remark},
            appPackageName = #{appPackageName},
            appModuleName = #{appModuleName},
            appPopupType = #{appPopupType},
            appTemplateType = #{appTemplateType},
            appAddBtnFlag = #{appAddBtnFlag},
            appUpdateBtnFlag = #{appUpdateBtnFlag},
            appDelBtnFlag = #{appDelBtnFlag},
            appCopyBtnFlag = #{appCopyBtnFlag},
            appShowBtnFlag = #{appShowBtnFlag},
            appAddBtnCode = #{appAddBtnCode},
            appUpdateBtnCode = #{appUpdateBtnCode},
            appDelBtnCode = #{appDelBtnCode},
            appCopyBtnCode = #{appCopyBtnCode},
            appShowBtnCode = #{appShowBtnCode},
            parentSystemId = #{parentSystemId},
            parentMenuId = #{parentMenuId},
            menuIcon = #{menuIcon},
            parentIdName = #{parentIdName},
            slaveTalbeName = #{slaveTalbeName},
            slaveFieldName = #{slaveFieldName}
        where id = #{id}
    </update>
    <sql id="genDataField">
        select id,`name`,authorName,serviceName,packageName,
               moduleName,subPackageName,entitySuperClassName,mapperSuperClassName,serviceSuperClassName,
               serviceImplSuperClassName,dsFlag,tenderFlag,lombokFlag,chainFlag,constFlag,genFlag,prefixPath,suffixPath,
               remark, appPackageName,appModuleName,appPopupType,appTemplateType,appAddBtnFlag,appUpdateBtnFlag,appDelBtnFlag,
               appCopyBtnFlag,appShowBtnFlag,appAddBtnCode,appUpdateBtnCode,appDelBtnCode,appCopyBtnCode,appShowBtnCode,
               parentSystemId,parentMenuId,menuIcon,parentIdName,slaveTalbeName,slaveFieldName
    </sql>
    <select id="getGenDataById" resultType="com.xunmo.biz.data.GenData">
        <include refid="genDataField"></include>
        from t_data
        where id = #{id}
    </select>
    <select id="getGenDataList" resultType="com.xunmo.biz.data.GenData">
        <include refid="genDataField"></include>
        from t_data
        <where>
            <if test="id != null and '' != id">
                and id = #{id}
            </if>
        </where>
    </select>

    <!-- 生成表 -->
    <insert id="addGenTable" parameterType="com.xunmo.biz.table.GenTable" useGeneratedKeys="true" keyProperty="id">
        insert into t_table (dataId, tableName, tableComment, entityName, varName, authorName, serviceName, packageName,swaggerComment,
        moduleName, subPackageName, entitySuperClassName, mapperSuperClassName, serviceSuperClassName,
        serviceImplSuperClassName, dsFlag, tenderFlag, lombokFlag,
		 chainFlag, constFlag, genFlag, prefixPath, suffixPath, remark,
         appPackageName,appModuleName,appPopupType,appTemplateType,appAddBtnFlag,appUpdateBtnFlag,appDelBtnFlag,appCopyBtnFlag,appShowBtnFlag,
         appAddBtnCode,appUpdateBtnCode,appDelBtnCode,appCopyBtnCode,appShowBtnCode,
         parentSystemId,parentMenuId,menuName,menuIcon,parentIdName,slaveTalbeName,slaveFieldName
        ) values
        <foreach collection="tables" item="table" index="index" separator=",">
            (#{table.dataId}, #{table.tableName}, #{table.tableComment}, #{table.entityName}, #{table.varName}, #{table.authorName},
             #{table.serviceName},#{table.packageName},#{table.swaggerComment},
            #{table.moduleName}, #{table.subPackageName}, #{table.entitySuperClassName}, #{table.mapperSuperClassName},#{table.serviceSuperClassName},
            #{table.serviceImplSuperClassName}, #{table.dsFlag}, #{table.tenderFlag}, #{table.lombokFlag},
            #{table.chainFlag},#{table.constFlag}, #{table.genFlag}, #{table.prefixPath}, #{table.suffixPath}, #{table.remark},
            #{table.appPackageName},#{table.appModuleName},#{table.appPopupType},#{table.appTemplateType},#{table.appAddBtnFlag},
             #{table.appUpdateBtnFlag},#{table.appDelBtnFlag},#{table.appCopyBtnFlag},#{table.appShowBtnFlag},#{table.appAddBtnCode},
             #{table.appUpdateBtnCode},#{table.appDelBtnCode},#{table.appCopyBtnCode},#{table.appShowBtnCode},#{table.parentSystemId},
             #{table.parentMenuId},#{table.menuName},#{table.menuIcon}, #{table.parentIdName},#{table.slaveTalbeName},#{table.slaveFieldName}
            )
        </foreach>
    </insert>

    <delete id="delGenTable">
        delete
        from t_table
        where id = #{id}
    </delete>

    <update id="updateGenTable">
        update t_table
        set tableName = #{tableName},
            tableComment = #{tableComment},
            entityName = #{entityName},
            varName = #{varName},
            authorName = #{authorName},
            swaggerComment = #{swaggerComment},
            serviceName = #{serviceName},
            packageName = #{packageName},
            moduleName = #{moduleName},
            subPackageName = #{subPackageName},
            entitySuperClassName = #{entitySuperClassName},
            mapperSuperClassName = #{mapperSuperClassName},
            serviceSuperClassName = #{serviceSuperClassName},
            serviceImplSuperClassName = #{serviceImplSuperClassName},
            dsFlag = #{dsFlag},
            tenderFlag = #{tenderFlag},
            lombokFlag = #{lombokFlag},
            chainFlag = #{chainFlag},
            constFlag = #{constFlag},
            genFlag = #{genFlag},
            prefixPath = #{prefixPath},
            suffixPath = #{suffixPath},
            remark = #{remark},
            appPackageName = #{appPackageName},
            appModuleName = #{appModuleName},
            appPopupType = #{appPopupType},
            appTemplateType = #{appTemplateType},
            appAddBtnFlag = #{appAddBtnFlag},
            appUpdateBtnFlag = #{appUpdateBtnFlag},
            appDelBtnFlag = #{appDelBtnFlag},
            appCopyBtnFlag = #{appCopyBtnFlag},
            appShowBtnFlag = #{appShowBtnFlag},
            appAddBtnCode = #{appAddBtnCode},
            appUpdateBtnCode = #{appUpdateBtnCode},
            appDelBtnCode = #{appDelBtnCode},
            appCopyBtnCode = #{appCopyBtnCode},
            appShowBtnCode = #{appShowBtnCode},
            parentSystemId = #{parentSystemId},
            parentMenuId = #{parentMenuId},
            menuName = #{menuName},
            menuIcon = #{menuIcon},
            parentIdName = #{parentIdName},
            slaveTalbeName = #{slaveTalbeName},
            slaveFieldName = #{slaveFieldName}
        where id = #{id}
    </update>

    <sql id="genTableField">
       select id,dataId,tableName,tableComment,entityName,varName,authorName,serviceName,packageName,swaggerComment,
       moduleName,subPackageName,entitySuperClassName,mapperSuperClassName,serviceSuperClassName,
       serviceImplSuperClassName,dsFlag,tenderFlag,lombokFlag,chainFlag,constFlag,genFlag,prefixPath,suffixPath,
       remark, appPackageName,appModuleName,appPopupType,appTemplateType,appAddBtnFlag,appUpdateBtnFlag,appDelBtnFlag,
       appCopyBtnFlag,appShowBtnFlag,appAddBtnCode,appUpdateBtnCode,appDelBtnCode,appCopyBtnCode,appShowBtnCode,
       parentSystemId,parentMenuId,menuName,menuIcon,parentIdName,slaveTalbeName,slaveFieldName
    </sql>

    <select id="getGenTableById" resultType="com.xunmo.biz.table.GenTable">
        <include refid="genTableField"></include>
        from t_table
        where id = #{id}
    </select>
    <select id="countGenTable" resultType="java.lang.Long">
        select count(*)
        from t_table
    </select>

    <select id="getGenTable" resultType="com.xunmo.biz.table.GenTable">
        <include refid="genTableField"></include>
        from t_table
        <where>
            <if test="tableName != null and '' != tableName">
                and tableName like concat(#{tableName}, '%')
            </if>
            <if test="tableComment != null and '' != tableComment">
                and tableComment like concat(#{tableComment}, '%')
            </if>
        </where>
        <if test="pageNo != null and pageSize != null">
            limit #{pageNo}, #{pageSize}
        </if>
    </select>

    <!-- 生成字段 -->
    <insert id="addGenField" useGeneratedKeys="true" keyProperty="id">
        insert into t_field (genTableId, tableName, columnName, columnComment, swaggerComment, columnType, javaType, javaField, tsType,
                             sort, pkFlag, incFlag, mustFlag, logicDeleteFlag, versionFlag, fillType, addFlag, editFlag, listFlag, queryFlag,
                             defaultValue, isNullable, dataType, `length`, width, component, dictType, queryType, enumStr, editHelpMessage,
                             listHelpMessage, numericPrecision, numericScale, columnKey, extra, createTime, updateTime
        ) values
        <foreach collection="fields" item="field" index="index" separator=",">
            (#{field.genTableId}, #{field.tableName}, #{field.columnName}, #{field.columnComment}, #{field.swaggerComment}, #{field.columnType},
             #{field.javaType}, #{field.javaField}, #{field.tsType}, #{field.sort}, #{field.pkFlag}, #{field.incFlag}, #{field.mustFlag},
             #{field.logicDeleteFlag}, #{field.versionFlag}, #{field.fillType}, #{field.addFlag}, #{field.editFlag}, #{field.listFlag}, #{field.queryFlag},
             #{field.defaultValue}, #{field.isNullable}, #{field.dataType}, #{field.length}, #{field.width}, #{field.component}, #{field.dictType},
             #{field.queryType}, #{field.enumStr}, #{field.editHelpMessage}, #{field.listHelpMessage}, #{field.numericPrecision},
             #{field.numericScale}, #{field.columnKey}, #{field.extra}, #{field.createTime}, #{field.updateTime}
            )
        </foreach>
    </insert>
    <delete id="delGenField">
        delete
        from t_field
        where genTableId = #{genTableId}
    </delete>

    <select id="countGenField" resultType="java.lang.Long">
        select count(*)
        from t_field where genTableId = #{genTableId}
    </select>

    <select id="getGenField" resultType="com.xunmo.biz.field.GenField">
        select id,genTableId, tableName, columnName, columnComment, swaggerComment, columnType, javaType, javaField, tsType,
               sort, pkFlag, incFlag, mustFlag, logicDeleteFlag, versionFlag, fillType, addFlag, editFlag, listFlag, queryFlag,
               defaultValue, isNullable, dataType, length, width, component, dictType, queryType, enumStr, editHelpMessage,
               listHelpMessage, numericPrecision, numericScale, columnKey, extra, createTime, updateTime
        from t_field
            where genTableId = #{genTableId}
            <if test="columnName != null and '' != columnName">
                and columnName like concat(#{columnName}, '%')
            </if>
            <if test="columnComment != null and '' != columnComment">
                and columnComment like concat(#{columnComment}, '%')
            </if>
        <if test="pageNo != null and pageSize != null">
            limit #{pageNo}, #{pageSize}
        </if>
    </select>

    <update id="updateGenField">
        update t_field
        set tableName = #{tableName} ,
            columnName = #{columnName} ,
            columnComment = #{columnComment} ,
            swaggerComment = #{swaggerComment} ,
            columnType = #{columnType} ,
            javaType = #{javaType} ,
            javaField = #{javaField} ,
            tsType = #{tsType} ,
            sort = #{sort} ,
            pkFlag = #{pkFlag} ,
            incFlag = #{incFlag} ,
            mustFlag = #{mustFlag} ,
            logicDeleteFlag = #{logicDeleteFlag} ,
            versionFlag = #{versionFlag} ,
            fillType = #{fillType} ,
            addFlag = #{addFlag} ,
            editFlag = #{editFlag} ,
            listFlag = #{listFlag} ,
            queryFlag = #{queryFlag} ,
            defaultValue = #{defaultValue} ,
            isNullable = #{isNullable} ,
            dataType = #{dataType} ,
            length = #{length} ,
            width = #{width} ,
            component = #{component} ,
            dictType = #{dictType} ,
            queryType = #{queryType} ,
            enumStr = #{enumStr} ,
            editHelpMessage = #{editHelpMessage} ,
            listHelpMessage = #{listHelpMessage} ,
            numericPrecision = #{numericPrecision} ,
            numericScale = #{numericScale} ,
            columnKey = #{columnKey} ,
            extra = #{extra} ,
            createTime = #{createTime} ,
            updateTime = #{updateTime}
        where id = #{id}
    </update>

    <!-- 数据源 -->
    <select id="queryAllDatabases" resultType="com.xunmo.biz.database.Database">
        select id,name,type,username,password,conType,host,port,dataSchema,jdbcUrl,createTime
        from t_database
    </select>

    <insert id="addDatabase"  useGeneratedKeys="true" keyProperty="id">
        insert into t_database (name, type, username, password, conType, host, port, dataSchema, jdbcUrl)
        values (#{name}, #{type}, #{username}, #{password}, #{conType}, #{host}, #{port}, #{dataSchema}, #{jdbcUrl})
    </insert>
    <delete id="delDatabase">
        delete from t_database where id = #{id}
    </delete>
    <update id="updateDatabase">
        update  t_database set
               name = #{name},
               type =  #{type},
               username =  #{username},
               password =  #{password},
               conType =  #{conType},
               host =  #{host},
               port =  #{port},
               dataSchema =  #{dataSchema},
               jdbcUrl =  #{jdbcUrl}
        where id = #{id}
    </update>
    <select id="getDatabaseById" resultType="com.xunmo.biz.database.Database">
        select id,name,type,username,password,conType,host,port,dataSchema,jdbcUrl,createTime
        from t_database where id = #{id}
    </select>

    <!-- 查询所有子系统和子菜单 -->
    <select id="getAllSystem" resultType="map">
        select id,name
        from t_system
    </select>


    <select id="getParentMenus" resultType="map">
        select id,name
        from t_menus
    </select>

    <resultMap id="BaseResultMap" type="com.xunmo.biz.kv.DataKv">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="key" jdbcType="VARCHAR" property="key" />
        <result column="dataId" jdbcType="VARCHAR" property="dataId" />
        <result column="source" jdbcType="INTEGER" property="source" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="value" jdbcType="VARCHAR" property="value" javaType="cn.hutool.json.JSONObject" typeHandler="com.xunmo.config.mybatis.JsonObjectTypeHandler" />
    </resultMap>
    <!-- dataKv -->
    <insert id="addDataKv" parameterType="com.xunmo.biz.kv.DataKv" useGeneratedKeys="true" keyProperty="id">
        insert into t_kv(`key`, `dataId`, `source`, `type`, `value`) values (#{key}, #{dataId}, #{source}, #{type}, #{value, typeHandler=com.xunmo.config.mybatis.JsonObjectTypeHandler})
    </insert>
    <select id="delDataKv" parameterType="com.xunmo.biz.kv.DataKv">
        delete from t_kv
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="dataId != null">
                and dataId = #{dataId}
            </if>
        </where>
    </select>

    <update id="updateDataKv" parameterType="com.xunmo.biz.kv.DataKv">
        update t_kv
        set
            `key` =  #{key},
            `type`= #{type},
            `value`= #{value, typeHandler=com.xunmo.config.mybatis.JsonObjectTypeHandler}
        where id = #{id}
    </update>

    <select id="getDataKv" resultMap="BaseResultMap">
        select * from t_kv where dataId = #{dataId}
    </select>

    <!-- genKv -->
    <insert id="addGenKv" parameterType="com.xunmo.biz.kv.GenKv" useGeneratedKeys="true" keyProperty="id">
        insert into t_gen_kv(`kvId`, `key`, `dataId`, `tableId`,`source`, `type`, `label`,`value`) values
        <foreach collection="genKvs" item="genKv" index="index" separator=",">
          (#{genKv.kvId}, #{genKv.key}, #{genKv.dataId}, #{genKv.tableId}, #{genKv.source}, #{genKv.type}, #{genKv.label}, #{genKv.value})
        </foreach>
    </insert>
    <delete id="delGenKv">
        delete from t_gen_kv
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="dataId != null">
                and dataId = #{dataId}
            </if>
            <if test="tableId != null">
                and tableId = #{tableId}
            </if>
            <if test="kvId != null">
                and kvId = #{kvId}
            </if>
        </where>
    </delete>
    <select id="getGenKv" resultType="com.xunmo.biz.kv.GenKv">
        select distinct * from t_gen_kv
        <where>
            <if test="tableId != null">
                and tableId = #{tableId}
            </if>
            <if test="dataId != null">
                and dataId = #{dataId}
            </if>
            <if test="kvId != null">
                and kvId = #{kvId}
            </if>
        </where>
    </select>


</mapper>
